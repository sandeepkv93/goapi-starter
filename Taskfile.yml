version: '3'

vars:
  BINARY_NAME: goapi-starter

tasks:
  default:
    cmds:
      - task: run

  # Development tasks
  ensure-db:
    cmds:
      - |
        if ! docker ps | grep -q goapi_starter_db; then
          echo "Starting database container..."
          docker compose up -d db
          echo "Waiting for database to be ready..."
          sleep 5
        else
          echo "Database is already running"
        fi

  build:
    cmds:
      - go build -o bin/{{.BINARY_NAME}} cmd/api/main.go
    sources:
      - ./**/*.go
    generates:
      - bin/{{.BINARY_NAME}}

  run:
    deps: [ensure-db]
    cmds:
      - go run cmd/api/main.go
    desc: Run the application locally

  dev:
    deps: [ensure-db]
    cmds:
      - air
    desc: Run the application with hot reload (requires air)

  clean:
    cmds:
      - rm -rf bin
    desc: Clean build files

  test:
    cmds:
      - go test -v ./...
    desc: Run tests

  install-tools:
    cmds:
      - |
        if ! command -v air &> /dev/null; then
          go install github.com/air-verse/air@latest
        fi
    desc: Install development tools

  # Docker tasks
  docker-build:
    cmds:
      - docker compose build
    desc: Build Docker images

  docker-run:
    cmds:
      - docker compose up -d
    desc: Run all services in Docker

  docker-logs:
    cmds:
      - docker compose logs -f
    desc: Follow Docker logs

  docker-stop:
    cmds:
      - docker compose stop
    desc: Stop Docker containers

  docker-clean:
    cmds:
      - docker compose down -v
    desc: Stop and remove Docker containers and volumes

  docker-clean-run:
    cmds:
      - docker compose down -v
      - docker compose up --build -d
    desc: Stop and remove Docker containers and volumes and start them again

  docker-dev:
    cmds:
      - docker compose -f docker-compose.dev.yml up -d
    desc: Run all services in Docker for local development

  docker-dev-stop:
    cmds:
      - docker compose -f docker-compose.dev.yml down
    desc: Stop all services in Docker for local development

  docker-dev-logs:
    cmds:
      - docker compose -f docker-compose.dev.yml logs -f
    desc: Follow Docker logs for local development

  docker-dev-clean:
    cmds:
      - docker compose -f docker-compose.dev.yml down -v
    desc: Stop and remove Docker containers and volumes for local development

  docker-dev-run:
    cmds:
      - docker compose -f docker-compose.dev.yml up --build -d
      - task: run
    desc: Run all services in Docker for local development

  # Monitoring tasks
  prometheus-up:
    cmds:
      - docker compose up -d prometheus
    desc: Start Prometheus container

  grafana-up:
    cmds:
      - docker compose up -d grafana
    desc: Start Grafana container

  monitoring-up:
    cmds:
      - docker compose up -d prometheus grafana
    desc: Start all monitoring containers

  monitoring-logs:
    cmds:
      - docker compose logs -f prometheus grafana
    desc: Follow monitoring logs 